// Copyright 2020-2021 Nikita Fediuchin. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once

#define __MPGX__

#define MPGX_VERSION_MAJOR @mpgx_VERSION_MAJOR@
#define MPGX_VERSION_MINOR @mpgx_VERSION_MINOR@
#define MPGX_VERSION_PATCH @mpgx_VERSION_PATCH@

#define MPGX_SUPPORT_VULKAN @MPGX_SUPPORT_VULKAN@
#define MPGX_DEFAULT_CAPACITY 4

typedef enum MpgxResult
{
	SUCCESS_MPGX_RESULT = 0,
	FAILED_TO_ALLOCATE_MPGX_RESULT = 1,
	FAILED_TO_INIT_GLFW_MPGX_RESULT = 2,
	FAILED_TO_INIT_FREETYPE_MPGX_RESULT = 3,
	FAILED_TO_INIT_VULKAN_MPGX_RESULT = 4,
	FAILED_TO_INIT_OPENGL_MPGX_RESULT = 5,
	NO_VULKAN_SUPPORT_MPGX_RESULT = 6,
	MPGX_RESULT_COUNT = 7,
} MpgxResult;

static const char* const mpgxResultStrings[MPGX_RESULT_COUNT] = {
	"Success",
	"Failed to allocate",
	"Failed to init GLFW",
	"Failed to init FreeType",
	"Failed to init Vulkan",
	"Failed to init OpenGL",
	"No Vulkan support",
};

inline static const char* mpgxResultToString(
	MpgxResult result)
{
	if (result < SUCCESS_MPGX_RESULT ||
		result >= MPGX_RESULT_COUNT)
	{
		return "Unknown mpgx result";
	}

	return mpgxResultStrings[result];
}

typedef enum GraphicsAPI
{
	VULKAN_GRAPHICS_API = 0,
	OPENGL_GRAPHICS_API = 1,
	OPENGL_ES_GRAPHICS_API = 2,
	GRAPHICS_API_COUNT = 3,
} GraphicsAPI;

inline static const char* graphicsApiToString(GraphicsAPI api)
{
	if (api == VULKAN_GRAPHICS_API)
		return "Vulkan";
	else if (api == OPENGL_GRAPHICS_API)
		return "OpenGL";
	else if (api == OPENGL_ES_GRAPHICS_API)
		return "OpenGLES";
	else
		return "Unknown";
}
